This code is just for reference

container_commands:
    01_install_libs:
        command: "pip install -r requirements.txt"
    02_migrate:
        command: "django-admin.py migrate"
        leader_only: true
    03_collectstatic:
        command: "django-admin.py collectstatic --noinput"

    01_remove_existing_cron_job:
        command: "rm /etc/cron.d/cron_jobs || exit 0"
    02_add_cron_job:
        command: "cat .ebextensions/cron_job.txt > /etc/cron.d/cron_job && chmod 644 /etc/cron.d/cron_job"
        leader_only: true

    remove_old_cron:
        command: "rm -f /etc/cron.d/mycron.bak"

option_settings:
    aws:elasticbeanstalk:application:environment:
        DJANGO_SETTINGS_MODULE: config.settings

# Cron Commands

files:
  "/usr/local/bin/test_cron.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      INSTANCE_ID=`curl http://169.254.169.254/latest/meta-data/instance-id 2>/dev/null`
      REGION=`curl -s http://169.254.169.254/latest/dynamic/instance-identity/document 2>/dev/null | jq -r .region`

      # Find the Auto Scaling Group name from the Elastic Beanstalk environment
      ASG=`aws ec2 describe-tags --filters "Name=resource-id,Values=$INSTANCE_ID" \
          --region $REGION --output json | jq -r '.[][] | select(.Key=="aws:autoscaling:groupName") | .Value'`

      # Find the first instance in the Auto Scaling Group
      FIRST=`aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names $ASG \
          --region $REGION --output json | \
          jq -r '.AutoScalingGroups[].Instances[] | select(.LifecycleState=="InService") | .InstanceId' | sort | head -1`

      # If the instance ids are the same exit 0
      [ "$FIRST" = "$INSTANCE_ID" ]

    "/usr/local/bin/myscript.sh":
        mode: "000755"
        owner: root
        group: root
        content: |
            #!/bin/bash

            /usr/local/bin/test_cron.sh || exit

            # My Commands
            curl -i -H "Foung-Required-Key: aa" http://abcd.elasticbeanstalk.com/api/prime/foung/ > /dev/null 2>&1

            exit 0

    "/etc/cron.d/mycron":
        mode: "000644"
        owner: root
        group: root
        content: |
            * */2 * * * root /usr/local/bin/myscript.sh

container_commands:
    01_remove_old_cron:
        command: "rm -f /etc/cron.d/mycron.bak"

option_settings:
    aws:elasticbeanstalk:application:environment:
        DJANGO_SETTINGS_MODULE: config.settings